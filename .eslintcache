[{"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"4","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"5","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\utils\\getValidationErrors.ts":"6","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Button\\index.tsx":"7","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Input\\index.tsx":"8","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Button\\styles.ts":"9","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Input\\styles.ts":"10","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Tooltip\\index.tsx":"11","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Tooltip\\styles.ts":"12","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"13","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"14","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\hooks\\index.tsx":"15","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\hooks\\toast.tsx":"16","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\hooks\\auth.tsx":"17","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"18","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"19","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\routes\\index.tsx":"20","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"21","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"22","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Dashboard\\index.tsx":"23","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Dashboard\\styles.ts":"24","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\routes\\Route.tsx":"25","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\services\\api.ts":"26","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx":"27","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts":"28","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx":"29","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts":"30","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Profile\\index.tsx":"31","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Profile\\styles.ts":"32"},{"size":198,"mtime":1606424930959,"results":"33","hashOfConfig":"34"},{"size":406,"mtime":1606826521339,"results":"35","hashOfConfig":"34"},{"size":463,"mtime":1605800541682,"results":"36","hashOfConfig":"34"},{"size":2800,"mtime":1612290194744,"results":"37","hashOfConfig":"34"},{"size":1508,"mtime":1606827217359,"results":"38","hashOfConfig":"34"},{"size":321,"mtime":1606442581793,"results":"39","hashOfConfig":"34"},{"size":401,"mtime":1612290778064,"results":"40","hashOfConfig":"34"},{"size":1664,"mtime":1612731296942,"results":"41","hashOfConfig":"34"},{"size":381,"mtime":1606063887728,"results":"42","hashOfConfig":"34"},{"size":1379,"mtime":1606485081394,"results":"43","hashOfConfig":"34"},{"size":367,"mtime":1606325387078,"results":"44","hashOfConfig":"34"},{"size":708,"mtime":1606326155189,"results":"45","hashOfConfig":"34"},{"size":786,"mtime":1606761289643,"results":"46","hashOfConfig":"34"},{"size":162,"mtime":1606754172982,"results":"47","hashOfConfig":"34"},{"size":272,"mtime":1606747494477,"results":"48","hashOfConfig":"34"},{"size":1488,"mtime":1606752712708,"results":"49","hashOfConfig":"34"},{"size":1881,"mtime":1612733212579,"results":"50","hashOfConfig":"34"},{"size":1187,"mtime":1612291360841,"results":"51","hashOfConfig":"34"},{"size":1204,"mtime":1612291373651,"results":"52","hashOfConfig":"34"},{"size":801,"mtime":1612730312492,"results":"53","hashOfConfig":"34"},{"size":2957,"mtime":1606828996444,"results":"54","hashOfConfig":"34"},{"size":1529,"mtime":1606827549608,"results":"55","hashOfConfig":"34"},{"size":7277,"mtime":1612730204540,"results":"56","hashOfConfig":"34"},{"size":5012,"mtime":1612730240708,"results":"57","hashOfConfig":"34"},{"size":802,"mtime":1606828618713,"results":"58","hashOfConfig":"34"},{"size":116,"mtime":1606828694796,"results":"59","hashOfConfig":"34"},{"size":2898,"mtime":1612290629005,"results":"60","hashOfConfig":"34"},{"size":1508,"mtime":1612289931756,"results":"61","hashOfConfig":"34"},{"size":2949,"mtime":1612292566279,"results":"62","hashOfConfig":"34"},{"size":1508,"mtime":1612291510077,"results":"63","hashOfConfig":"34"},{"size":3508,"mtime":1612733195636,"results":"64","hashOfConfig":"34"},{"size":1684,"mtime":1612732906861,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1pn50ct",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\index.tsx",[],["132","133","134","135","136"],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\hooks\\auth.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Dashboard\\index.tsx",["137"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBr from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport logoImg from '../../assets/logo.svg';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from './styles';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  formattedHour: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then((res) => {\n        setMonthAvailability(res.data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then((res) => {\n        const formattedAppointments = res.data.map((appointment) => {\n          return {\n            ...appointment,\n            formattedHour: format(parseISO(appointment.date), 'HH:MM'),\n          };\n        });\n        setAppointments(formattedAppointments);\n      });\n  }, [selectedDate]);\n\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter((monthDay) => monthDay.available === false)\n      .map((monthDay) => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n        return new Date(year, month, monthDay.day);\n      });\n\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBr,\n    });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', {\n      locale: ptBr,\n    });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find((appointment) =>\n      isAfter(parseISO(appointment.date), new Date()),\n    );\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n          <button onClick={signOut} type=\"button\">\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <Schedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{selectedWeekDay}</span>\n          </p>\n\n          {isToday(selectedDate) && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment?.user.avatar_url}\n                  alt={nextAppointment?.user.name}\n                />\n\n                <strong>{nextAppointment?.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment?.formattedHour}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n\n          <Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {morningAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.formattedHour}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n          <Section>\n            <strong>Tarde</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {afternoonAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.formattedHour}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            onMonthChange={handleMonthChange}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\routes\\Route.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Profile\\index.tsx",[],"C:\\Users\\danie\\desenvolvimento\\rocketseat\\gostack-14\\gobarber-web\\src\\pages\\Profile\\styles.ts",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":2,"message":"149","line":10,"column":1,"nodeType":"150","endLine":10,"endColumn":41,"fix":"151"},"lines-around-directive",["152"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/order","`react-router-dom` import should occur before import of `../../assets/logo.svg`","ImportDeclaration",{"range":"153","text":"154"},"padding-line-between-statements",[331,499],"import { Link } from 'react-router-dom';\nimport logoImg from '../../assets/logo.svg';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n"]